#version 460
#extension GL_ARB_gpu_shader_int64 : enable

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0, std430) buffer VBO { float vbo[]; };
layout (binding = 1, std430) buffer Lists { uint64_t lists[]; };
layout (binding = 2, std430) buffer Coordinates { float coordinates[]; };
layout (binding = 3, std430) buffer Queries { float queries[]; };

uniform int NeighborNum;
const int Dim = 3;

void main()
{
   int index = int(gl_GlobalInvocationID.x);
   if (index >= 1) return;

   // squared distances are stored in some buffer if they are needed
   vbo[0] = queries[0];
   vbo[1] = queries[1];
   vbo[2] = queries[2];
   for (int i = 0; i < NeighborNum; ++i) {
      int node_index = int(lists[i] & 0xffffffff);
      if (index < 0) {
         vbo[(i + 1) * Dim] = vbo[0];
         vbo[(i + 1) * Dim + 1] = vbo[1];
         vbo[(i + 1) * Dim + 2] = vbo[2];
      }
      else {
         int j = node_index * Dim;
         vbo[(i + 1) * Dim] = coordinates[j];
         vbo[(i + 1) * Dim + 1] = coordinates[j + 1];
         vbo[(i + 1) * Dim + 2] = coordinates[j + 2];
      }
   }
}